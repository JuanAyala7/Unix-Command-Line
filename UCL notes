//Command Line Techniques and Directory Navigation

ls = List

cd ~ : Users directory

cd = Change directory

up/down : Scroll through your previous commands.
 
cd .. : Allows you to go backwards from your current path/directory.

ctrl + A/E : Takes you to the beginning or the end of the command line.

ctrl + U : Clears your current command line without executing it.

mkdir : Make a directory (folder).


//Creating, Opening, and Removing Files through the Command Line

touch : Used to create, change and modify timestamps of a file.

start : Opens the file within the directory for Windows Users.
Note : 'open' does the same as 'start' but for MacOS Users.

start atom Text1.txt : This allows the user to open a file within a desired application, in this case, it was atom.
^ atom is for Windows Users while -a would be form MacOS Users.

rm : Removes a specific file you'd like to remove from a directory.

pwd : Shows the full path name of your current directory (from the root directory).

rm * : Removes every file within the respective directory.
Note : if you try this command within a directory that consists of only folders, nothing will happen as this commands only removes files.

rm -r : Allows you to remove a directory.
Note : this will also remove all of the folders that are inside the directory (folder) along with all of its child components.

node *file-name.js* : This command would allow you to run the JavaScript code within the respective file ("index.js") in a computer instead of the browser.

node : Allows you to go inside REPL (Read Evaluation Print Loop), which allows you to execute code in bite sized chunks.

Tab button (twice) : This allows Hyper to reveal to you all the possible commands you can use from the point of what you have typed in Hyper. 

atom . : This allows you to open your Express server in atom.

npm install express : This command allows you to install express within the directory.

npm install -g nodemon :

nodemon *file-name* :

//Handling Requests and Responses: the GET Request

const express = require("express");

const app = express();

app.get("/", function(request, response){
  response.send("<h1>Hello, world!</h1>");
});

app.listen(3000, function(){
  console.log("Server started on port3000");
});


